// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// sample_rows_cpp
std::vector<int> sample_rows_cpp(std::vector<int> x, int size, bool repl);
RcppExport SEXP _treecoding_sample_rows_cpp(SEXP xSEXP, SEXP sizeSEXP, SEXP replSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<int> >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type size(sizeSEXP);
    Rcpp::traits::input_parameter< bool >::type repl(replSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_rows_cpp(x, size, repl));
    return rcpp_result_gen;
END_RCPP
}
// test_set_diff
std::vector<int> test_set_diff(std::vector<int> x, std::vector<int> y);
RcppExport SEXP _treecoding_test_set_diff(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<int> >::type x(xSEXP);
    Rcpp::traits::input_parameter< std::vector<int> >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(test_set_diff(x, y));
    return rcpp_result_gen;
END_RCPP
}
// load_data
void load_data(std::vector<std::vector<float>>& x, std::vector<std::vector<int>>& y);
RcppExport SEXP _treecoding_load_data(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::vector<float>>& >::type x(xSEXP);
    Rcpp::traits::input_parameter< std::vector<std::vector<int>>& >::type y(ySEXP);
    load_data(x, y);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_treecoding_sample_rows_cpp", (DL_FUNC) &_treecoding_sample_rows_cpp, 3},
    {"_treecoding_test_set_diff", (DL_FUNC) &_treecoding_test_set_diff, 2},
    {"_treecoding_load_data", (DL_FUNC) &_treecoding_load_data, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_treecoding(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
